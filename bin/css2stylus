#!/usr/bin/env node
var fs = require('fs'),
  path = require('path'),
  args = process.argv.slice(2),
  Css2Stylus = require('../lib/css2stylus'),
  converter,
  options = {},
  keepCssSyntax,
  readFile = function (file, callback) {
    return fs.readFile(file, 'utf-8', function (err, data) {
      if (err) { throw err; }
      callback(data);
    });
  };

if (!args.length) {
  console.log('Usage: css2stylus <file1.css file2.css>');
  process.exit(1);
}

keepCssSyntax = args.indexOf('--cssSyntax');
if (keepCssSyntax >= 0) {
  options.cssSyntax = true;
  args.splice(keepCssSyntax, 1);
}

args.forEach(function (file) {
  if (path.extname(file) === '.css') {
    var css = readFile(file, function (css) {
      var stylusfile = path.basename(file, path.extname(file)) + '.styl',
        converter = new Css2Stylus.Converter(css);
      converter.processCss(options);
      fs.writeFile(stylusfile, converter.getStylus());
    });
  }
});